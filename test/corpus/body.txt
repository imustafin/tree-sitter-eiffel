===
Creation instruction
===
class A feature x
  do
    create {X} x.make
    create x.make(True)
  end
end
---
(source_file
  (class_declaration (class_name (identifier))
    (features
      (feature_clause
        (feature_declaration
          (new_feature (extended_feature_name (identifier)))
          (attribute_or_routine
            (feature_body
              (effective_routine
                (internal
                  (routine_mark)
                  (instruction
                    (creation
                      (manifest_type (type (identifier)))
                      (creation_call
                        (identifier)
                        (unqualified_call (identifier)))))
                  (instruction
                    (creation
                      (creation_call
                        (identifier)
                        (unqualified_call
                          (identifier)
                          (actuals
                            (expression
                              (special_expression
                                (manifest_constant
                                  (manifest_value (boolean_constant)))))))))))))))))))

===
Call
===
class A feature x
  do
    a.b
  end
end
---
(source_file
  (class_declaration (class_name (identifier))
    (features
      (feature_clause
        (feature_declaration
          (new_feature (extended_feature_name (identifier)))
          (attribute_or_routine
            (feature_body
              (effective_routine
                (internal
                  (routine_mark)
                  (instruction
                    (call
                        (call
                          (unqualified_call (identifier)))
                      (unqualified_call (identifier)))))))))))))

===
Arguments on next line
===
class A feature x
  do
    a.f
      (True)
  end
end
---
(source_file
  (class_declaration (class_name (identifier))
    (features
      (feature_clause
        (feature_declaration
          (new_feature (extended_feature_name (identifier)))
          (attribute_or_routine
            (feature_body
              (effective_routine
                (internal
                  (routine_mark)
                  (instruction
                    (call
                      (call (unqualified_call (identifier)))
                      (unqualified_call
                        (identifier)
                        (actuals
                          (expression
                            (special_expression
                              (manifest_constant
                                (manifest_value (boolean_constant))))))))))))))))))

===
Body. Assigner call
===
class A feature x
  do
    a := True
    a.f := True
  end
end
---
(source_file
  (class_declaration (class_name (identifier))
    (features
      (feature_clause
        (feature_declaration
          (new_feature (extended_feature_name (identifier)))
          (attribute_or_routine
            (feature_body
              (effective_routine
                (internal
                  (routine_mark)
                  (instruction
                    (assigner_call
                      (call
                        (unqualified_call (identifier)))
                      (expression
                        (special_expression
                          (manifest_constant
                            (manifest_value (boolean_constant)))))))
                  (instruction
                    (assigner_call
                      (call
                        (call (unqualified_call (identifier)))
                        (unqualified_call (identifier)))
                      (expression
                        (special_expression
                          (manifest_constant
                            (manifest_value
                              (boolean_constant))))))))))))))))
